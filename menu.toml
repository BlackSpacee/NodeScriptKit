title = "NodeScriptKit - 脚本工具集合"
splash = """

███╗   ██╗ ██████╗ ██████╗ ███████╗███████╗ ██████╗██████╗ ██╗██████╗ ████████╗██╗  ██╗██╗████████╗
████╗  ██║██╔═══██╗██╔══██╗██╔════╝██╔════╝██╔════╝██╔══██╗██║██╔══██╗╚══██╔══╝██║ ██╔╝██║╚══██╔══╝
██╔██╗ ██║██║   ██║██║  ██║█████╗  ███████╗██║     ██████╔╝██║██████╔╝   ██║   █████╔╝ ██║   ██║   
██║╚██╗██║██║   ██║██║  ██║██╔══╝  ╚════██║██║     ██╔══██╗██║██╔═══╝    ██║   ██╔═██╗ ██║   ██║   
██║ ╚████║╚██████╔╝██████╔╝███████╗███████║╚██████╗██║  ██║██║██║        ██║   ██║  ██╗██║   ██║   
╚═╝  ╚═══╝ ╚═════╝ ╚═════╝ ╚══════╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝        ╚═╝   ╚═╝  ╚═╝╚═╝   ╚═╝   
                                                                                                         
"""

[app]
entry = 'main' # 菜单入口

[scripts]
# 脚本集合，键值对
memory = "free -h"
disk = "df -hT"
cpuinfo = "cat /proc/cpuinfo"
whoami = "whoami"

hello = "echo \"hello world\""
docker = "bash <(curl -sL 'https://get.docker.com')"

test = "echo '这是一个测试项'"

# 脚本集合，测试类脚本
#NodeQuality
node_quality = "bash <(curl -sL run.NodeQuality.com)"
#融合怪测试
fusion_test = "bash <(curl -sL bash.spiritlhl.net/ecs)"
#IP质量
ip_quality = "bash <(curl -sL IP.Check.Place)"
#网络质量
network_quality = "bash <(curl -sL Net.Check.Place)"

#yabs
yabs = "bash <(curl -sL yabs.sh)"
#benchmark
bench = "bash <(curl -sL bench.sh)"
#superbench
super_bench = "bash <(curl -sL git.io/superbench.sh)"
#supertrace
super_trace = "bash <(curl -sL raw.githubusercontent.com/oooldking/script/master/supertrace.sh)"

#解锁检测
unlock_test = "bash <(curl -sL Media.Check.Place)"
#回程路由
return_route = "bash <(curl -sL raw.githubusercontent.com/zhanghanyun/backtrace/main/install.sh)"

nws_sh = "bash <(curl -sL nws.sh)"

#重装系统
reinstall = "bash <(curl -sL nsk-35i.pages.dev/sh/system_reinstall/reinstall.sh)"
installnet = "bash <(curl -sL nsk-35i.pages.dev/sh/system_reinstall/installnet.sh)"
osmutation = "bash <(curl -sL nsk-35i.pages.dev/sh/system_reinstall/osmutation.sh)"


#系统管理
kernel_network_optimizer = "bash <(curl -Lso- git.io/kernel.sh)"
dns_unlock = "bash <(curl -sL raw.githubusercontent.com/Jimmyzxk/DNS-Alice-Unlock/refs/heads/main/dns-unlock.sh)"
add_zram = "bash <(curl -sL raw.githubusercontent.com/spiritLHLS/addzram/main/addzram.sh)"
add_swap = "bash <(curl -sL raw.githubusercontent.com/spiritLHLS/addswap/main/addswap.sh)"

#硬件信息
dedicated_benchmark = "bash <(curl -sL git.io/ceshi)"
disk_write_test = "bash <(curl -sL nsk-35i.pages.dev/sh/hardware_info/disk_test.sh)"
lemon_bench_full="bash <(curl -sL raw.githubusercontent.com/LemonBench/LemonBench/main/LemonBench.sh) --full"
lemon_bench_fast="bash <(curl -sL raw.githubusercontent.com/LemonBench/LemonBench/main/LemonBench.sh) --fast"
unix_bench = "bash <(curl -sL github.com/teddysun/across/raw/master/unixbench.sh)"
memory_check = "bash <(curl -sL raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh)"

#网络工具
bbr_install = "bash <(curl -sL sh.nekoneko.cloud/bbr/bbr.sh)"
bbr_tcpx_install = "bash <(curl -sL raw.githubusercontent.com/ylx2016/Linux-NetSpeed/master/tcpx.sh)"
brook_pf_install = "bash <(curl -Lso- sh.nekoneko.cloud/brook-pf/brook-pf.sh)"
tools_install = "bash <(curl -Lso- raw.githubusercontent.com/BlackSheep-cry/TCP-Optimization-Tool/main/tool.sh)"
realm_install = "bash <(curl -Lso- raw.githubusercontent.com/qqrrooty/EZrealm/main/realm.sh)"
gost_install = "bash <(curl -Lso- raw.githubusercontent.com/qqrrooty/EZgost/main/gost.sh)"


#安全工具
fail2ban = "bash <(curl -sL raw.githubusercontent.com/FunctionClub/Fail2ban/master/fail2ban.sh)"

#应用部署
app_bt = "bash <(curl -sL download.bt.cn/install/install_panel.sh) ed8484bec"
app_aapanel = "bash <(curl -sL www.aapanel.com/script/install_7.0_en.sh)"
app_1panel = "bash <(curl -sL resource.1panel.pro/quick_start.sh)"
app_nezha = "bash <(curl -sL raw.githubusercontent.com/nezhahq/scripts/refs/heads/main/install.sh)"
app_warp = "bash <(curl -sL gitlab.com/fscarmen/warp_unlock/-/raw/main/unlock.sh)"
app_aria2 = "bash <(curl -sL raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/aria2.sh)"
app_alist = "bash <(curl -sL nsk-35i.pages.dev/sh/app_deployment/alist_manager.sh)"
app_aurora = "bash <(curl -sL raw.githubusercontent.com/Aurora-Admin-Panel/deploy/main/install.sh)"

[[menus]]
id = "main"
title = "主菜单"
sub_menus = [
    "system_info", #系统信息
    "test_tool", #测试工具
    "system_reinstall", #重装系统
    "system_manage", #系统管理
    "hardware_info", #硬件信息
    "network_tools", #网络工具
    "security_tools", #安全工具
    "app_deployment", #应用部署
    "utility_tools", #其他实用工具
]

#TOP 系统信息
[[menus]]
id = "system_info"
title = "系统信息"
sub_menus = [
    "cpu",
    "memory",
    "disk",
    "current-user",
]

#TOP 测试工具
[[menus]]
id = "test_tool"
title = "测试工具"
sub_menus = [
  "node_quality",
  "fusion_test",
  "ip_quality",
  "network_quality",
  "yabs",
  "bench",
  "super_bench",
  "unlock_test",
  "return_route",
  "super_trace",
  "nws_sh",
]

#TOP 重装系统
[[menus]]
id = "system_reinstall"
title = "重装系统"
sub_menus = [
  "reinstall",
  "installnet",
  "osmutation",
]

#TOP 系统管理
[[menus]]
id = "system_manage"
title = "系统管理"
sub_menus = [
  'kernel_network_optimizer',
  'dns_unlock',
  'add_zram',
  'add_swap',
]

[[menus]]
id = "hardware_info"
title = "硬件信息"
sub_menus = [
    'dedicated_benchmark',
    'lemon_bench_full',
    'lemon_bench_fast',
    'unix_bench',
    'disk_write_test',
    'memory_check',
]

[[menus]]
id = "network_tools"
title = "网络工具"
sub_menus = [
  'tools_install',
  'bbr_install',
  'bbr_tcpx_install',
  'realm_install',
  'gost_install',
  'brook_pf_install',
]


[[menus]]
id = "security_tools"
title = "安全工具"
sub_menus = [
  'fail2ban'
]

[[menus]]
id = "app_deployment"
title = "应用部署"
sub_menus = [
  'app_bt',
  'app_aapanel',
  'app_1panel',
  'app_nezha',
  'app_warp',
  'app_alist',
  'app_aria2',
  'app_aurora',
]

[[menus]]
id = "utility_tools"
title = "实用工具"
sub_menus = [
]


#以下为执行菜单
[[menus]]
id = "cpu"
title = "查看CPU信息"
script = "cpuinfo"

[[menus]]
id = "memory"
title = "查看内存信息"
script = "memory"

[[menus]]
id = "disk"
title = "查看硬盘信息"
script = "disk"

[[menus]]
id = "current-user"
title = "查看当前用户"
script = "whoami"


[[menus]]
id = "node_quality"
title = "NodeQuality"
script = "node_quality"

[[menus]]
id = "fusion_test"
title = "融合怪"
script = "fusion_test"

[[menus]]
id = "ip_quality"
title = "IP质量"
script = "ip_quality"

[[menus]]
id = "network_quality"
title = "网络质量"
script = "network_quality"

[[menus]]
id = "yabs"
title = "YABS"
script = "yabs"

[[menus]]
id = "bench"
title = "Bench"
script = "bench"

[[menus]]
id = "super_bench"
title = "Super Bench"
script = "super_bench"

[[menus]]
id = "nws_sh"
title = "综合测速"
script = "nws_sh"

[[menus]]
id = "unlock_test"
title = "解锁检测"
script = "unlock_test"

[[menus]]
id = "return_route"
title = "回程路由[结果版]"
script = "return_route"

[[menus]]
id = "super_trace"
title = "回程路由[节点版]"
script = "super_trace"




#重装系统
[[menus]]
id = "reinstall"
title = "Reinstall（史上更强）"
script = "reinstall"

[[menus]]
id = "installnet"
title = "InstallNET.sh"
script = "installnet"

[[menus]]
id = "osmutation"
title = "OsMutation"
script = "osmutation"

[[menus]]
id = "kernel_network_optimizer"
title = "内核与网络优化"
script = "kernel_network_optimizer"

[[menus]]
id = "dns_unlock"
title = "一键修改解锁DNS"
script = "dns_unlock"

[[menus]]
id = "add_zram"
title = "addZram"
script = "add_zram"

[[menus]]
id = "add_swap"
title = "addSwap"
script = "add_swap"


[[menus]]
id = "dedicated_benchmark"
title = "独服基准脚本"
script = "dedicated_benchmark"

[[menus]]
id = "disk_write_test"
title = "硬盘写入测试"
script = "disk_write_test"

[[menus]]
id = "memory_check"
title = "超售测试"
script = "memory_check"


[[menus]]
id = "lemon_bench_full"
title = "LemonBench[完整版]"
script = "lemon_bench_full"

[[menus]]
id = "lemon_bench_fast"
title = "LemonBench[快速版]"
script = "lemon_bench_fast"

[[menus]]
id = "unix_bench"
title = "UnixBench"
script = "unix_bench"




[[menus]]
id = "fail2ban"
title = "Fail2ban"
script = "fail2ban"



[[menus]]
id = "app_bt"
title = "宝塔面板[官方版]"
script = "app_bt"

[[menus]]
id = "app_aapanel"
title = "Aapanel面板[官方版]"
script = "app_aapanel"

[[menus]]
id = "app_1panel"
title = "1Panel面板[官方版]"
script = "app_1panel"

[[menus]]
id = "app_nezha"
title = "nezha面板[官方版]"
script = "app_nezha"

[[menus]]
id = "app_warp"
title = "warp解锁"
script = "app_warp"

[[menus]]
id = "app_aria2"
title = "aria2下载器"
script = "app_aria2"

[[menus]]
id = "app_alist"
title = "alist网盘"
script = "app_alist"

[[menus]]
id = "app_aurora"
title = "极光面板"
script = "app_aurora"

[[menus]]
id = "bbr_install"
title = "BBR安装[by Nekoneko]"
script = "bbr_install"

[[menus]]
id = "bbr_tcpx_install"
title = "锐速/BBRPLUS/BBR2安装[by ylx]"
script = "bbr_tcpx_install"

[[menus]]
id = "tools_install"
title = "TCP调优"
script = "tools_install"

[[menus]]
id = "realm_install"
title = "Realm 一键转发"
script = "realm_install"

[[menus]]
id = "gost_install"
title = "Ghost 一键转发"
script = "gost_install"

[[menus]]
id = "brook_pf_install"
title = "Brook一键转发[by Nekoneko]"
script = "brook_pf_install"



[[menus]]
id = "docker"
title = "安装docker"
script = "docker"

[[menus]]
id = "helloworld"
title = "打印你好世界"
script = "hello"

